@page
@model ManageUsersModel
@{
    ViewData["Title"] = "Manage Users";
}

<div class="container mt-4">
    <div class="row mb-3">
        <div class="col-md-6">
            <h2>User Management</h2>
        </div>
        <div class="col-md-6 text-end">
            <a href="/Index" class="btn btn-secondary">
                <i class="bi bi-house-door-fill me-2"></i> Back Home
            </a>
            <a href="#" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#createUserModal">
                <i class="bi bi-plus-circle ms-2"></i> Create User
            </a>
        </div>
    </div>

    @if (!string.IsNullOrEmpty(Model.ErrorMessage))
    {
        <div class="alert alert-danger">@Model.ErrorMessage</div>
    }
    @if (!string.IsNullOrEmpty(Model.SuccessMessage))
    {
        <div class="alert alert-success">@Model.SuccessMessage</div>
    }

    <div class="card">
        <div class="card-header bg-light">
            <div class="row">
                <div class="col">
                    <div class="input-group">
                        <span class="input-group-text"><i class="bi bi-search"></i></span>
                        <input type="text" id="searchUsers" class="form-control" placeholder="Search users..."
                               onkeyup="filterUsers()">
                    </div>
                </div>
            </div>
        </div>
        <div class="card-body p-0">
            <div class="table-responsive">
                <table id="usersTable" class="table table-striped table-hover mb-0">
                    <thead class="table-light">
                        <tr>
                            <th>Username</th>
                            <th>Email</th>
                            <th>Role</th>
                            <th>Created</th>
                            <th class="text-center">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var user in Model.Users)
                        {
                            <tr>
                                <td>@user.Username</td>
                                <td>-</td> <!-- No email property in User model -->
                                <td>@user.Role</td>
                                <td>-</td> <!-- No created date in User model -->
                                <td class="text-center">
                                    <button class="btn btn-sm btn-outline-secondary" data-bs-toggle="modal" data-bs-target="#editUserModal-@user.Id">Edit</button>
                                    <button class="btn btn-sm btn-outline-danger" data-bs-toggle="modal" data-bs-target="#deleteUserModal-@user.Id">Delete</button>
                                </td>
                            </tr>
                            <!-- Edit User Modal -->
                            <div class="modal fade" id="editUserModal-@user.Id" tabindex="-1" aria-labelledby="editUserModalLabel-@user.Id" aria-hidden="true">
                                <div class="modal-dialog">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <h5 class="modal-title" id="editUserModalLabel-@user.Id">Edit User</h5>
                                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                        </div>
                                        <div class="modal-body">
                                            <form method="post" asp-page-handler="Edit">
                                                <input type="hidden" name="EditInput.Id" value="@user.Id" />
                                                <div class="mb-3">
                                                    <label class="form-label">Username</label>
                                                    <input type="text" class="form-control" name="EditInput.Username" value="@user.Username" required />
                                                </div>
                                                <div class="mb-3">
                                                    <label class="form-label">Role</label>
                                                    <select class="form-select" name="EditInput.Role" required>
                                                        <option value="Admin" selected="@(user.Role == "Admin")">Admin</option>
                                                        <option value="User" selected="@(user.Role == "User")">User</option>
                                                    </select>
                                                </div>
                                                <button type="submit" class="btn btn-primary">Save Changes</button>
                                            </form>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <!-- Delete User Modal -->
                            <div class="modal fade" id="deleteUserModal-@user.Id" tabindex="-1" aria-labelledby="deleteUserModalLabel-@user.Id" aria-hidden="true">
                                <div class="modal-dialog">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <h5 class="modal-title" id="deleteUserModalLabel-@user.Id">Delete User</h5>
                                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                        </div>
                                        <div class="modal-body">
                                            Are you sure you want to delete user <strong>@user.Username</strong>?
                                        </div>
                                        <div class="modal-footer">
                                            <form method="post" asp-page-handler="Delete">
                                                <input type="hidden" name="DeleteInput.Id" value="@user.Id" />
                                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                                                <button type="submit" class="btn btn-danger">Delete</button>
                                            </form>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<!-- Create User Modal -->
<div class="modal fade" id="createUserModal" tabindex="-1" aria-labelledby="createUserModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="createUserModalLabel">Create User</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form method="post" asp-page-handler="Create">
                    <div class="mb-3">
                        <label class="form-label">Username</label>
                        <input type="text" class="form-control" name="CreateInput.Username" required />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Password</label>
                        <div class="input-group">
                            <input type="password" class="form-control" name="CreateInput.Password" id="createUserPasswordInput" required />
                            <button type="button" class="btn btn-outline-secondary" id="toggleCreateUserPassword">
                                <i class="bi bi-eye" id="toggleCreateUserPasswordIcon"></i>
                            </button>
                            <button type="button" class="btn btn-outline-secondary" id="generateCreateUserPassword">Generate</button>
                        </div>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Teams</label>
                        <select class="form-select" name="CreateInput.TeamIds[]" multiple required>
                            @foreach (var team in Model.Teams)
                            {
                                <option value="@team.Id">@team.Name</option>
                            }
                        </select>
                        <div class="form-text">Hold Ctrl (Windows) or Cmd (Mac) to select multiple teams.</div>
                    </div>
                    <button type="submit" class="btn btn-primary">Create User</button>
                </form>
            </div>
        </div>
    </div>
</div>

<script>
    // Password visibility toggle for Create User
    document.addEventListener('DOMContentLoaded', function () {
        var pwInput = document.getElementById('createUserPasswordInput');
        var toggleBtn = document.getElementById('toggleCreateUserPassword');
        var icon = document.getElementById('toggleCreateUserPasswordIcon');
        if (toggleBtn) {
            toggleBtn.addEventListener('click', function () {
                if (pwInput.type === 'password') {
                    pwInput.type = 'text';
                    icon.classList.remove('bi-eye');
                    icon.classList.add('bi-eye-slash');
                } else {
                    pwInput.type = 'password';
                    icon.classList.remove('bi-eye-slash');
                    icon.classList.add('bi-eye');
                }
            });
        }
        var genBtn = document.getElementById('generateCreateUserPassword');
        if (genBtn) {
            genBtn.addEventListener('click', function () {
                pwInput.value = generatePassword(16);
            });
        }
        function generatePassword(length) {
            var charset = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!%^#&*()_-+=<>?';
            var password = "";
            for (var i = 0, n = charset.length; i < length; ++i) {
                password += charset.charAt(Math.floor(Math.random() * n));
            }
            return password;
        }
    });
</script>


